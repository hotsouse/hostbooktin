import json
from datetime import datetime
from collections import defaultdict

# –§–∞–π–ª –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ–± –æ–±–º–µ–Ω–∞—Ö
EXCHANGES_FILE = "real_exchanges.json"

def load_exchanges():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –æ–±–º–µ–Ω–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞"""
    try:
        with open(EXCHANGES_FILE, "r", encoding="utf-8") as f:
            return json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        return []

def save_exchange(from_user, to_user, book_given, book_received):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –Ω–æ–≤—ã–π –æ–±–º–µ–Ω –≤ —Ñ–∞–π–ª"""
    exchanges = load_exchanges()
    
    new_exchange = {
        "date": datetime.now().strftime("%d.%m.%Y %H:%M"),
        "from_user": from_user,
        "to_user": to_user,
        "book_given": book_given,
        "book_received": book_received,
        "status": "‚úÖ –£—Å–ø–µ—à–Ω–æ"
    }
    
    exchanges.append(new_exchange)
    
    with open(EXCHANGES_FILE, "w", encoding="utf-8") as f:
        json.dump(exchanges, f, ensure_ascii=False, indent=2)
    
    return new_exchange

def get_exchange_statistics():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ –æ–±–º–µ–Ω–∞–º"""
    exchanges = load_exchanges()
    
    if not exchanges:
        return {
            "total_exchanges": 0,
            "unique_users": 0,
            "top_books": [],
            "weekly_stats": {}
        }
    
    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±–º–µ–Ω—ã –ø–æ –¥–∞—Ç–µ
    exchanges.sort(key=lambda x: datetime.strptime(x['date'], "%d.%m.%Y %H:%M"))
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    stats = {
        "total_exchanges": len(exchanges),
        "unique_users": len(set(
            [ex['from_user'][1] for ex in exchanges if ex['from_user'][1] != "None"] + 
            [ex['to_user'][1] for ex in exchanges if ex['to_user'][1] != "None"]
        )),
        "top_books": [],
        "weekly_stats": defaultdict(int)
    }
    
    # –ü–æ–¥—Å—á–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–Ω–∏–≥
    book_counts = defaultdict(int)
    for ex in exchanges:
        book_counts[ex['book_given']] += 1
        book_counts[ex['book_received']] += 1
    
    stats["top_books"] = sorted(book_counts.items(), key=lambda x: x[1], reverse=True)[:3]
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –Ω–µ–¥–µ–ª—è–º
    for ex in exchanges:
        date = datetime.strptime(ex['date'], "%d.%m.%Y %H:%M")
        week_num = date.isocalendar()[1]
        stats["weekly_stats"][week_num] += 1
    
    return stats

def print_exchanges():
    """–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±–º–µ–Ω–∞—Ö –≤ –∫–æ–Ω—Å–æ–ª—å (–∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –≤–∞—à–µ–º—É –ø—Ä–∏–º–µ—Ä—É)"""
    exchanges = load_exchanges()
    stats = get_exchange_statistics()
    
    print("üìö –†–ï–ê–õ–¨–ù–´–ï –û–ë–ú–ï–ù–´ –ö–ù–ò–ì–ê–ú–ò\n")
    
    if not exchanges:
        print("–ü–æ–∫–∞ –Ω–µ –±—ã–ª–æ —Å–æ–≤–µ—Ä—à–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ –æ–±–º–µ–Ω–∞.")
        return
    
    first_date = datetime.strptime(exchanges[0]['date'], "%d.%m.%Y %H:%M")
    last_date = datetime.strptime(exchanges[-1]['date'], "%d.%m.%Y %H:%M")
    
    print(f"üìÖ –ü–µ—Ä–∏–æ–¥: {first_date.strftime('%d.%m.%Y')} - {last_date.strftime('%d.%m.%Y')}")
    print(f"üìä –í—Å–µ–≥–æ –æ–±–º–µ–Ω–æ–≤: {stats['total_exchanges']}")
    print("="*60)
    
    for i, exchange in enumerate(exchanges, 1):
        print(f"\nüîÑ –û–±–º–µ–Ω #{i}")
        print(f"üìÖ –î–∞—Ç–∞: {exchange['date']}")
        print(f"üë§ –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {exchange['from_user'][0]} (@{exchange['from_user'][1]})")
        print(f"   üìñ –ö–Ω–∏–≥–∏: {exchange['from_user'][2]}")
        print(f"üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {exchange['to_user'][0]} (@{exchange['to_user'][1]})")
        print(f"   üìñ –ö–Ω–∏–≥–∏: {exchange['to_user'][2]}")
        print(f"üì§ –û—Ç–¥–∞–ª: {exchange['book_given']}")
        print(f"üì• –ü–æ–ª—É—á–∏–ª: {exchange['book_received']}")
        print(f"üü¢ –°—Ç–∞—Ç—É—Å: {exchange['status']}")
        print("="*60)
    
    # –í—ã–≤–æ–¥ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –û–ë–ú–ï–ù–û–í")
    print("="*60)
    print(f"‚Ä¢ –í—Å–µ–≥–æ –æ–±–º–µ–Ω–æ–≤: {stats['total_exchanges']}")
    print(f"‚Ä¢ –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {stats['unique_users']}")
    
    if stats['top_books']:
        print("\nüèÜ –¢–æ–ø-3 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∫–Ω–∏–≥–∏:")
        for book, count in stats['top_books']:
            print(f"‚Ä¢ {book}: {count} –æ–±–º–µ–Ω–æ–≤")
    
    if stats['weekly_stats']:
        print("\nüìÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –Ω–µ–¥–µ–ª—è–º:")
        for week, count in sorted(stats['weekly_stats'].items()):
            print(f"‚Ä¢ –ù–µ–¥–µ–ª—è {week}: {count} –æ–±–º–µ–Ω–æ–≤")
    
    print("="*60)

# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
if __name__ == "__main__":
    # –ü—Ä–∏–º–µ—Ä –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±–º–µ–Ω–∞
    new_exchange = save_exchange(
        from_user=("–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "ivan_reader", "–í–æ–π–Ω–∞ –∏ –º–∏—Ä, –ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ"),
        to_user=("–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤", "peter_booklover", "1984, –ú–∞—Å—Ç–µ—Ä –∏ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞"),
        book_given="–ü—Ä–µ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –∏ –Ω–∞–∫–∞–∑–∞–Ω–∏–µ",
        book_received="1984"
    )
    
    # –í—ã–≤–æ–¥ –≤—Å–µ—Ö –æ–±–º–µ–Ω–æ–≤ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    print_exchanges()