"""Convert user_ids to bigint

Revision ID: 779e55a4cb49
Revises: 
Create Date: 2025-04-07 19:55:50.791249

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '779e55a4cb49'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # Удаляем внешний ключ для from_user_id и to_user_id
    with op.batch_alter_table('exchanges', schema=None) as batch_op:
        batch_op.drop_constraint('exchanges_from_user_id_fkey', type_='foreignkey')
        batch_op.drop_constraint('exchanges_to_user_id_fkey', type_='foreignkey')

    # Изменяем тип столбцов from_user_id и to_user_id на BIGINT
    with op.batch_alter_table('exchanges', schema=None) as batch_op:
        batch_op.alter_column('from_user_id', 
                              type_=sa.BigInteger(), 
                              postgresql_using='from_user_id::bigint')
        batch_op.alter_column('to_user_id', 
                              type_=sa.BigInteger(), 
                              postgresql_using='to_user_id::bigint')

    # Убедимся, что тип данных user_id в таблице users также BigInteger
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('user_id', 
                              type_=sa.BigInteger(), 
                              postgresql_using='user_id::bigint')

    # Восстанавливаем внешний ключ для from_user_id и to_user_id
    with op.batch_alter_table('exchanges', schema=None) as batch_op:
        batch_op.create_foreign_key('exchanges_from_user_id_fkey', 
                                    'users', 
                                    ['from_user_id'], 
                                    ['user_id'])
        batch_op.create_foreign_key('exchanges_to_user_id_fkey', 
                                    'users', 
                                    ['to_user_id'], 
                                    ['user_id'])





    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('full_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=120),
               nullable=False)
        batch_op.alter_column('username',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=80),
               existing_nullable=True)
        batch_op.alter_column('user_id',
               existing_type=sa.BigInteger(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=True)

    with op.batch_alter_table('exchanges', schema=None) as batch_op:
        batch_op.alter_column('to_user_id',
               existing_type=sa.BigInteger(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=True)
        batch_op.alter_column('from_user_id',
               existing_type=sa.BigInteger(),
               type_=sa.VARCHAR(length=36),
               existing_nullable=True)

    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=True),
    sa.Column('full_name', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('books', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('started', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('user_id', name='user_user_id_key')
    )
    # ### end Alembic commands ###
